{"ast":null,"code":"var _jsxFileName = \"/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport './mocks';\nimport * as authNetflix from './utils/authNetflixProvider';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { AuthApp } from 'AuthApp';\nimport { UnauthApp } from 'UnauthApp';\nimport { clientAuth } from './utils/clientApi';\nimport { useFetchData } from './utils/hooks';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#E50914'\n    },\n    secondary: {\n      main: '#E50914'\n    }\n  }\n});\n\nasync function getUserByToken() {\n  let user = null;\n  const token = await authNetflix.getToken();\n\n  if (token) {\n    const data = await clientAuth('me', {\n      token\n    });\n    user = data.data.user;\n  }\n\n  return user;\n}\n\nfunction App() {\n  _s();\n\n  const {\n    data: authUser,\n    execute,\n    status,\n    setData\n  } = useFetchData();\n  React.useEffect(() => {\n    execute(getUserByToken());\n  }, [execute]);\n  const [authError, setAuthError] = React.useState();\n\n  const login = data => authNetflix.login(data).then(user => setData(user)).catch(err => setAuthError(err));\n\n  const register = data => authNetflix.register(data).then(user => setData(user)).catch(err => setAuthError(err));\n\n  const logout = () => {\n    authNetflix.logout();\n    setData(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: status === 'fetching' ? /*#__PURE__*/_jsxDEV(Backdrop, {\n      open: true,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this) : authUser ? /*#__PURE__*/_jsxDEV(AuthApp, {\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UnauthApp, {\n      login: login,\n      register: register,\n      error: authError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"gI9XyLgzYvvQqG3oW8VGXJQYj7Q=\", false, function () {\n  return [useFetchData];\n});\n\n_c = App;\nexport { App };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/App.js"],"names":["React","authNetflix","createTheme","ThemeProvider","AuthApp","UnauthApp","clientAuth","useFetchData","Backdrop","CircularProgress","theme","palette","mode","primary","main","secondary","getUserByToken","user","token","getToken","data","App","authUser","execute","status","setData","useEffect","authError","setAuthError","useState","login","then","catch","err","register","logout"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport './mocks'\nimport * as authNetflix from './utils/authNetflixProvider'\nimport {createTheme, ThemeProvider} from '@mui/material/styles'\nimport {AuthApp} from 'AuthApp'\nimport {UnauthApp} from 'UnauthApp'\nimport {clientAuth} from './utils/clientApi'\nimport {useFetchData} from './utils/hooks'\nimport Backdrop from '@mui/material/Backdrop'\nimport CircularProgress from '@mui/material/CircularProgress'\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#E50914',\n    },\n    secondary: {\n      main: '#E50914',\n    },\n  },\n})\n\nasync function getUserByToken() {\n  let user = null\n  const token = await authNetflix.getToken()\n  if (token) {\n    const data = await clientAuth('me', {token})\n    user = data.data.user\n  }\n  return user\n}\n\nfunction App() {\n  const {data: authUser, execute, status, setData} = useFetchData()\n  React.useEffect(() => {\n    execute(getUserByToken())\n  }, [execute])\n\n  const [authError, setAuthError] = React.useState()\n  const login = data =>\n    authNetflix\n      .login(data)\n      .then(user => setData(user))\n      .catch(err => setAuthError(err))\n  const register = data =>\n    authNetflix\n      .register(data)\n      .then(user => setData(user))\n      .catch(err => setAuthError(err))\n  const logout = () => {\n    authNetflix.logout()\n    setData(null)\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      {status === 'fetching' ? (\n        <Backdrop open={true}>\n          <CircularProgress color=\"primary\" />\n        </Backdrop>\n      ) : authUser ? (\n        <AuthApp logout={logout} />\n      ) : (\n        <UnauthApp login={login} register={register} error={authError} />\n      )}\n    </ThemeProvider>\n  )\n}\n\nexport {App}\n"]},"metadata":{},"sourceType":"module"}