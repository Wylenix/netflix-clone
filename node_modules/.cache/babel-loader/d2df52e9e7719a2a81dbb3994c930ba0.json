{"ast":null,"code":"var _jsxFileName = \"/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/App.exercise.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport './mocks';\nimport * as authNetflix from './utils/authNetflixProvider';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { AuthApp } from 'AuthApp';\nimport { UnauthApp } from 'UnauthApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#E50914'\n    },\n    secondary: {\n      main: '#E50914'\n    }\n  }\n});\n\nfunction App() {\n  _s();\n\n  const [authUser, setAuthUser] = React.useState(null);\n\n  const login = data => authNetflix.login(data).then(user => setAuthUser(user));\n\n  const register = data => authNetflix.register(data).then(user => setAuthUser(user));\n\n  const logout = () => {\n    authNetflix.logout();\n    setAuthUser(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: authUser ? /*#__PURE__*/_jsxDEV(AuthApp, {\n      logout: logout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(UnauthApp, {\n      login: login,\n      register: register\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"TVTL2WymH8LPiPX8vka/W2C28u0=\");\n\n_c = App;\nexport { App };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/App.exercise.js"],"names":["React","authNetflix","createTheme","ThemeProvider","AuthApp","UnauthApp","theme","palette","mode","primary","main","secondary","App","authUser","setAuthUser","useState","login","data","then","user","register","logout"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,SAAP;AACA,OAAO,KAAKC,WAAZ,MAA6B,6BAA7B;AACA,SAAQC,WAAR,EAAqBC,aAArB,QAAyC,sBAAzC;AACA,SAAQC,OAAR,QAAsB,SAAtB;AACA,SAAQC,SAAR,QAAwB,WAAxB;;AAEA,MAAMC,KAAK,GAAGJ,WAAW,CAAC;AACxBK,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KAFF;AAKPC,IAAAA,SAAS,EAAE;AACTD,MAAAA,IAAI,EAAE;AADG;AALJ;AADe,CAAD,CAAzB;;AAYA,SAASE,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,KAAK,CAACe,QAAN,CAAe,IAAf,CAAhC;;AACA,QAAMC,KAAK,GAAGC,IAAI,IAAIhB,WAAW,CAACe,KAAZ,CAAkBC,IAAlB,EAAwBC,IAAxB,CAA6BC,IAAI,IAAIL,WAAW,CAACK,IAAD,CAAhD,CAAtB;;AACA,QAAMC,QAAQ,GAAGH,IAAI,IACnBhB,WAAW,CAACmB,QAAZ,CAAqBH,IAArB,EAA2BC,IAA3B,CAAgCC,IAAI,IAAIL,WAAW,CAACK,IAAD,CAAnD,CADF;;AAEA,QAAME,MAAM,GAAG,MAAM;AACnBpB,IAAAA,WAAW,CAACoB,MAAZ;AACAP,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAIA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAER,KAAtB;AAAA,cACGO,QAAQ,gBACP,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEQ;AAAjB;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEL,KAAlB;AAAyB,MAAA,QAAQ,EAAEI;AAAnC;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlBQR,G;;KAAAA,G;AAoBT,SAAQA,GAAR","sourcesContent":["import * as React from 'react'\nimport './mocks'\nimport * as authNetflix from './utils/authNetflixProvider'\nimport {createTheme, ThemeProvider} from '@mui/material/styles'\nimport {AuthApp} from 'AuthApp'\nimport {UnauthApp} from 'UnauthApp'\n\nconst theme = createTheme({\n  palette: {\n    mode: 'dark',\n    primary: {\n      main: '#E50914',\n    },\n    secondary: {\n      main: '#E50914',\n    },\n  },\n})\n\nfunction App() {\n  const [authUser, setAuthUser] = React.useState(null)\n  const login = data => authNetflix.login(data).then(user => setAuthUser(user))\n  const register = data =>\n    authNetflix.register(data).then(user => setAuthUser(user))\n  const logout = () => {\n    authNetflix.logout()\n    setAuthUser(null)\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      {authUser ? (\n        <AuthApp logout={logout} />\n      ) : (\n        <UnauthApp login={login} register={register} />\n      )}\n    </ThemeProvider>\n  )\n}\n\nexport {App}\n"]},"metadata":{},"sourceType":"module"}