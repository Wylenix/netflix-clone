{"ast":null,"code":"/* \n -- Ne pas modifier --\n Exemple d'utilitaire permettant de se connecter au backend Netflix\n*/\nimport { AUTH_URL, localStorageTokenKey } from '../config';\n\nasync function clientApiNetflix(endpoint, data) {\n  const config = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return fetch(`${AUTH_URL}/${endpoint}`, config).then(async response => {\n    const data = await response.json();\n\n    if (response.ok) {\n      return data;\n    } else {\n      console.log('clientApiNetflix ko', data);\n      return Promise.reject(data);\n    }\n  });\n}\n\nasync function getToken() {\n  return window.localStorage.getItem(localStorageTokenKey);\n}\n\nfunction storeToken({\n  user\n}) {\n  window.localStorage.setItem(localStorageTokenKey, user.token);\n  return user;\n}\n\nasync function login({\n  username,\n  password\n}) {\n  return clientApiNetflix('login', {\n    username,\n    password\n  }).then(storeToken);\n}\n\nasync function register({\n  username,\n  password\n}) {\n  return clientApiNetflix('register', {\n    username,\n    password\n  }).then(storeToken);\n}\n\nasync function logout() {\n  window.localStorage.removeItem(localStorageTokenKey);\n}\n\nexport { getToken, login, register, logout, localStorageTokenKey };","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/utils/authNetflixProvider.js"],"names":["AUTH_URL","localStorageTokenKey","clientApiNetflix","endpoint","data","config","method","body","JSON","stringify","headers","fetch","then","response","json","ok","console","log","Promise","reject","getToken","window","localStorage","getItem","storeToken","user","setItem","token","login","username","password","register","logout","removeItem"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAAQA,QAAR,EAAkBC,oBAAlB,QAA6C,WAA7C;;AAEA,eAAeC,gBAAf,CAAgCC,QAAhC,EAA0CC,IAA1C,EAAgD;AAC9C,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAFO;AAGbM,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AAHI,GAAf;AAMA,SAAOC,KAAK,CAAE,GAAEX,QAAS,IAAGG,QAAS,EAAzB,EAA4BE,MAA5B,CAAL,CAAyCO,IAAzC,CAA8C,MAAMC,QAAN,IAAkB;AACrE,UAAMT,IAAI,GAAG,MAAMS,QAAQ,CAACC,IAAT,EAAnB;;AACA,QAAID,QAAQ,CAACE,EAAb,EAAiB;AACf,aAAOX,IAAP;AACD,KAFD,MAEO;AACLY,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCb,IAAnC;AACA,aAAOc,OAAO,CAACC,MAAR,CAAef,IAAf,CAAP;AACD;AACF,GARM,CAAP;AASD;;AAED,eAAegB,QAAf,GAA0B;AACxB,SAAOC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BtB,oBAA5B,CAAP;AACD;;AAED,SAASuB,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AAC1BJ,EAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BzB,oBAA5B,EAAkDwB,IAAI,CAACE,KAAvD;AACA,SAAOF,IAAP;AACD;;AAED,eAAeG,KAAf,CAAqB;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAArB,EAA2C;AACzC,SAAO5B,gBAAgB,CAAC,OAAD,EAAU;AAAC2B,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAV,CAAhB,CAAgDlB,IAAhD,CAAqDY,UAArD,CAAP;AACD;;AAED,eAAeO,QAAf,CAAwB;AAACF,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAxB,EAA8C;AAC5C,SAAO5B,gBAAgB,CAAC,UAAD,EAAa;AAAC2B,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAb,CAAhB,CAAmDlB,IAAnD,CAAwDY,UAAxD,CAAP;AACD;;AAED,eAAeQ,MAAf,GAAwB;AACtBX,EAAAA,MAAM,CAACC,YAAP,CAAoBW,UAApB,CAA+BhC,oBAA/B;AACD;;AAED,SAAQmB,QAAR,EAAkBQ,KAAlB,EAAyBG,QAAzB,EAAmCC,MAAnC,EAA2C/B,oBAA3C","sourcesContent":["/* \n -- Ne pas modifier --\n Exemple d'utilitaire permettant de se connecter au backend Netflix\n*/\nimport {AUTH_URL, localStorageTokenKey} from '../config'\n\nasync function clientApiNetflix(endpoint, data) {\n  const config = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {'Content-Type': 'application/json'},\n  }\n\n  return fetch(`${AUTH_URL}/${endpoint}`, config).then(async response => {\n    const data = await response.json()\n    if (response.ok) {\n      return data\n    } else {\n      console.log('clientApiNetflix ko', data)\n      return Promise.reject(data)\n    }\n  })\n}\n\nasync function getToken() {\n  return window.localStorage.getItem(localStorageTokenKey)\n}\n\nfunction storeToken({user}) {\n  window.localStorage.setItem(localStorageTokenKey, user.token)\n  return user\n}\n\nasync function login({username, password}) {\n  return clientApiNetflix('login', {username, password}).then(storeToken)\n}\n\nasync function register({username, password}) {\n  return clientApiNetflix('register', {username, password}).then(storeToken)\n}\n\nasync function logout() {\n  window.localStorage.removeItem(localStorageTokenKey)\n}\n\nexport {getToken, login, register, logout, localStorageTokenKey}\n"]},"metadata":{},"sourceType":"module"}