{"ast":null,"code":"var _jsxFileName = \"/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/components/NetflixApp.exercise.js\";\nimport React from 'react';\nimport { NetflixAppBar } from './NetflixAppBar';\nimport { NetflixRow } from './NetflixRow';\nimport { NetFlixFooter } from './NetFlixFooter'; // 🐶 importe 'axios'\n\nimport './Netflix.css'; // 🐶 passe en prop 'movie' qui contiendra les informations d'un film\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NetflixHeader = ({\n  movie\n}) => {\n  console.log(movie); // 🐶 La classe 'banner' contient une image fixe dans 'NetFlix.css' (background-image: url('../assets/images/banner.jpg'))\n  // Tu vas devoir changer l'image (donc cette propriété CSS) pour chaque nouveau film.\n  // Pour cela tu vas passer par le prop 'style' de <header> est passer l'objet avec les propiétés css.\n  // Tu vas donc avoir besoin de 2 choses : 'imageUrl' : l'url de l'image et 'banner' l'objet avec les propriétés CSS\n\n  const imageUrl = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`; // 🐶 1. Crée une constante 'imageUrl' qui contient l'url de l'image\n  //  - l'image est contenu dans 'backdrop_path' de l'objet 'movie'\n  //  - la base de l'url d'image est 'https://image.tmdb.org/t/p/original'\n  //\n  // 🐶 2. créé l'objet 'banner' avec les propiétés suivantes:\n  //\n  // backgroundImage: `url('${imageUrl}')`,\n  // backgroundSize: 'cover',\n  // backgroundPosition: 'center center',\n  // color: 'white',\n  // objectFit: 'contain',\n  // height: '448px',\n  // 🐶 si 'movie' n'est pas défini, retourne un fragment vide 🤖 <></>\n  // 🐶 si 'movie' est défini, retourne le header\n\n  return (\n    /*#__PURE__*/\n    // ⛏️ supprime le prop 'className' et utilise le prop 'style' avec l'objet 'banner'\n    _jsxDEV(\"header\", {\n      className: \"banner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: \"La casa de papel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button banner__buttonplay\",\n            children: \"Lecture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button banner__buttonInfo\",\n            children: \"Ajouter \\xE0 ma liste\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"synopsis\",\n          children: \"Le Professeur recrute une jeune braqueuse et sept autres criminels en vue d'un cambriolage grandiose ciblant la Maison royale de la Monnaie d'Espagne.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeBottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  );\n}; // 🐶 Tu vas devoir gérer le fetch de données avec axios dans 'NetflixApp'\n\n\n_c = NetflixHeader;\n\nconst NetflixApp = () => {\n  // 🐶 Créé un state 'headerMovie'\n  // 🐶 Créé une constante 'defaultMovieId' avec un id de film par défaut (399566 par exemple)\n  // 🐶 utilise ta cley d'api et langue\n  // const apiKey = '4fc7b001e8a107fe1fddc6b41ed0f4af'\n  // const lang = 'fr-fr'\n  // 🐶 utilise le hook 'useEffect' pour récupérer le film sur cette url\n  // `https://api.themoviedb.org/3/movie/${defaultMovieId}?api_key=${apiKey}&language=${lang}`\n  //  avec axios :\n  // 🤖\n  // axios\n  //   .get(url)\n  //   .then(response => console.log(response))\n  //   .catch(error => console.error(error))\n  // 🐶 met à jour 'headerMovie' sur la reponse d'axios\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NetflixAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      wideImage: false,\n      title: \"Films Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      wideImage: true,\n      title: \"S\\xE9rie Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetFlixFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = NetflixApp;\nexport { NetflixApp };\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NetflixHeader\");\n$RefreshReg$(_c2, \"NetflixApp\");","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/components/NetflixApp.exercise.js"],"names":["React","NetflixAppBar","NetflixRow","NetFlixFooter","NetflixHeader","movie","console","log","imageUrl","backdrop_path","NetflixApp"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,aAAR,QAA4B,iBAA5B,C,CACA;;AACA,OAAO,eAAP,C,CAEA;;;;AACA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAa;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADiC,CAEjC;AACA;AACA;AACA;;AACA,QAAMG,QAAQ,GAAI,sCAAqCH,KAAK,CAACI,aAAc,EAA3E,CANiC,CAOjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AACA;AAAA;AACE;AACA;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,gCAQE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,kCACE;AAAQ,YAAA,SAAS,EAAC,mCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,SAAS,EAAC,mCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAeE;AAAI,UAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAyBE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AA8BD,CArDD,C,CAuDA;;;KAvDML,a;;AAwDN,MAAMM,UAAU,GAAG,MAAM;AACvB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAvB;AAA8B,MAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAE,IAAvB;AAA6B,MAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA3BD;;MAAMA,U;AA4BN,SAAQA,UAAR","sourcesContent":["import React from 'react'\nimport {NetflixAppBar} from './NetflixAppBar'\nimport {NetflixRow} from './NetflixRow'\nimport {NetFlixFooter} from './NetFlixFooter'\n// 🐶 importe 'axios'\nimport './Netflix.css'\n\n// 🐶 passe en prop 'movie' qui contiendra les informations d'un film\nconst NetflixHeader = ({movie}) => {\n  console.log(movie)\n  // 🐶 La classe 'banner' contient une image fixe dans 'NetFlix.css' (background-image: url('../assets/images/banner.jpg'))\n  // Tu vas devoir changer l'image (donc cette propriété CSS) pour chaque nouveau film.\n  // Pour cela tu vas passer par le prop 'style' de <header> est passer l'objet avec les propiétés css.\n  // Tu vas donc avoir besoin de 2 choses : 'imageUrl' : l'url de l'image et 'banner' l'objet avec les propriétés CSS\n  const imageUrl = `https://image.tmdb.org/t/p/original${movie.backdrop_path}`\n  // 🐶 1. Crée une constante 'imageUrl' qui contient l'url de l'image\n  //  - l'image est contenu dans 'backdrop_path' de l'objet 'movie'\n  //  - la base de l'url d'image est 'https://image.tmdb.org/t/p/original'\n  //\n  // 🐶 2. créé l'objet 'banner' avec les propiétés suivantes:\n  //\n  // backgroundImage: `url('${imageUrl}')`,\n  // backgroundSize: 'cover',\n  // backgroundPosition: 'center center',\n  // color: 'white',\n  // objectFit: 'contain',\n  // height: '448px',\n\n  // 🐶 si 'movie' n'est pas défini, retourne un fragment vide 🤖 <></>\n\n  // 🐶 si 'movie' est défini, retourne le header\n  return (\n    // ⛏️ supprime le prop 'className' et utilise le prop 'style' avec l'objet 'banner'\n    <header className=\"banner\">\n      <div className=\"banner__contents\">\n        {/* 🐶 Utilise la propriété 'title' de 'movie' pour remplacer le titre 'La casa de papel' \n        - Note : utilise 'l'optionnal chaining' pour accéder à title\n        📑 https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/Optional_chaining\n        \n        - Note : Utilise 'Nullish coalescing' pour afficher '...' s'il n'y a pas de données \n        📑 https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator\n        */}\n        <h1 className=\"banner__title\">La casa de papel</h1>\n        <div className=\"banner__buttons\">\n          <button className=\"banner__button banner__buttonplay\">Lecture</button>\n          <button className=\"banner__button banner__buttonInfo\">\n            Ajouter à ma liste\n          </button>\n        </div>\n        <h1 className=\"synopsis\">\n          {/* 🐶 utilise la propiété 'overview' de 'movie' pour la description\n          Utilise 'l'optionnal' chaining et le 'Nullish coalescing'\n           */}\n          Le Professeur recrute une jeune braqueuse et sept autres criminels en\n          vue d'un cambriolage grandiose ciblant la Maison royale de la Monnaie\n          d'Espagne.\n        </h1>\n      </div>\n      <div className=\"banner--fadeBottom\"></div>\n    </header>\n  )\n}\n\n// 🐶 Tu vas devoir gérer le fetch de données avec axios dans 'NetflixApp'\nconst NetflixApp = () => {\n  // 🐶 Créé un state 'headerMovie'\n  // 🐶 Créé une constante 'defaultMovieId' avec un id de film par défaut (399566 par exemple)\n  // 🐶 utilise ta cley d'api et langue\n  // const apiKey = '4fc7b001e8a107fe1fddc6b41ed0f4af'\n  // const lang = 'fr-fr'\n\n  // 🐶 utilise le hook 'useEffect' pour récupérer le film sur cette url\n  // `https://api.themoviedb.org/3/movie/${defaultMovieId}?api_key=${apiKey}&language=${lang}`\n  //  avec axios :\n  // 🤖\n  // axios\n  //   .get(url)\n  //   .then(response => console.log(response))\n  //   .catch(error => console.error(error))\n  // 🐶 met à jour 'headerMovie' sur la reponse d'axios\n\n  return (\n    <div>\n      <NetflixAppBar />\n      {/* 🐶 passe le prop 'movie' avec la propiété 'data' de 'headerMovie'  */}\n      <NetflixHeader />\n      <NetflixRow wideImage={false} title=\"Films Netflix\" />\n      <NetflixRow wideImage={true} title=\"Série Netflix\" />\n      <NetFlixFooter />\n    </div>\n  )\n}\nexport {NetflixApp}\n"]},"metadata":{},"sourceType":"module"}