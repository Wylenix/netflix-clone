{"ast":null,"code":"var _jsxFileName = \"/Users/lio/Documents/Programmation/React-MikeC/netflix-clone/src/components/NetflixById.exercise.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NetflixAppBar } from './NetflixAppBar';\nimport { NetflixRow } from './NetflixRow';\nimport { NetFlixFooter } from './NetFlixFooter';\nimport { NetflixHeader } from './NetflixHeader';\nimport { clientApi } from '../utils/clientApi';\nimport { makeStyles } from '@mui/styles';\nimport { Alert, AlertTitle } from '@mui/material';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { useFetchData } from '../utils/hooks';\nimport { TYPE_MOVIE, TYPE_TV } from '../config';\nimport { useParams, useLocation } from 'react-router-dom';\nimport './Netflix.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    width: '50%',\n    margin: 'auto',\n    marginBotton: '50px'\n  },\n  progress: {\n    marginLeft: '30px'\n  }\n}));\n\nconst NetflixById = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    data: headerMovie,\n    error,\n    status,\n    execute\n  } = useFetchData();\n  let {\n    tvId,\n    movieId\n  } = useParams();\n  const location = useLocation();\n  const [type, setType] = React.useState(location.pathname.includes(TYPE_TV) ? TYPE_TV : TYPE_MOVIE);\n  const [id, setId] = React.useState(type === TYPE_TV ? tvId : movieId);\n  React.useEffect(() => {\n    execute(clientApi(`${type}/${id}`));\n  }, [execute, id, type]);\n  React.useEffect(() => {\n    const type = location.pathname.includes(TYPE_TV) ? TYPE_TV : TYPE_MOVIE;\n    setType(type);\n    setId(type === TYPE_TV ? tvId : movieId);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  }, [location.pathname, movieId, tvId]);\n\n  if (status === 'error') {\n    // sera catch√© par ErrorBoundary\n    throw new Error(error.message);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NetflixAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixHeader, {\n      movie: headerMovie === null || headerMovie === void 0 ? void 0 : headerMovie.data,\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      wideImage: true,\n      watermark: true,\n      type: TYPE_MOVIE,\n      filter: \"trending\",\n      title: \"Films Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      wideImage: false,\n      watermark: true,\n      type: TYPE_TV,\n      filter: \"trending\",\n      title: \"S\\xE9rie Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      type: TYPE_MOVIE,\n      filter: \"toprated\",\n      title: \"Les mieux not\\xE9s\",\n      watermark: true,\n      wideImage: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      type: TYPE_TV,\n      filter: \"genre\",\n      param: \"10759\",\n      title: \"Action & aventure\",\n      watermark: true,\n      wideImage: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      type: TYPE_MOVIE,\n      filter: \"genre\",\n      param: \"53\",\n      title: \"Les meilleurs Thriller\",\n      watermark: false,\n      wideImage: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), status === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.alert,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n          children: \"Une erreur est survenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), \"Detail : \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : null, status === 'fetching' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.progress,\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(NetFlixFooter, {\n      color: \"secondary\",\n      si: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NetflixById, \"j93BtBx1zQjV6lPhFN8zH/S3J8k=\", false, function () {\n  return [useStyles, useFetchData, useParams, useLocation];\n});\n\n_c = NetflixById;\nexport { NetflixById };\n\nvar _c;\n\n$RefreshReg$(_c, \"NetflixById\");","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/netflix-clone/src/components/NetflixById.exercise.js"],"names":["React","NetflixAppBar","NetflixRow","NetFlixFooter","NetflixHeader","clientApi","makeStyles","Alert","AlertTitle","CircularProgress","useFetchData","TYPE_MOVIE","TYPE_TV","useParams","useLocation","useStyles","theme","alert","width","margin","marginBotton","progress","marginLeft","NetflixById","classes","data","headerMovie","error","status","execute","tvId","movieId","location","type","setType","useState","pathname","includes","id","setId","useEffect","window","scrollTo","top","behavior","Error","message"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {NetflixAppBar} from './NetflixAppBar'\nimport {NetflixRow} from './NetflixRow'\nimport {NetFlixFooter} from './NetFlixFooter'\nimport {NetflixHeader} from './NetflixHeader'\nimport {clientApi} from '../utils/clientApi'\nimport {makeStyles} from '@mui/styles'\nimport {Alert, AlertTitle} from '@mui/material'\nimport CircularProgress from '@mui/material/CircularProgress'\nimport {useFetchData} from '../utils/hooks'\nimport {TYPE_MOVIE, TYPE_TV} from '../config'\nimport {useParams, useLocation} from 'react-router-dom'\nimport './Netflix.css'\n\nconst useStyles = makeStyles(theme => ({\n  alert: {\n    width: '50%',\n    margin: 'auto',\n    marginBotton: '50px',\n  },\n  progress: {\n    marginLeft: '30px',\n  },\n}))\n\nconst NetflixById = () => {\n  const classes = useStyles()\n  const {data: headerMovie, error, status, execute} = useFetchData()\n  let {tvId, movieId} = useParams()\n  const location = useLocation()\n  const [type, setType] = React.useState(\n    location.pathname.includes(TYPE_TV) ? TYPE_TV : TYPE_MOVIE,\n  )\n  const [id, setId] = React.useState(type === TYPE_TV ? tvId : movieId)\n\n  React.useEffect(() => {\n    execute(clientApi(`${type}/${id}`))\n  }, [execute, id, type])\n\n  React.useEffect(() => {\n    const type = location.pathname.includes(TYPE_TV) ? TYPE_TV : TYPE_MOVIE\n    setType(type)\n    setId(type === TYPE_TV ? tvId : movieId)\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    })\n  }, [location.pathname, movieId, tvId])\n\n  if (status === 'error') {\n    // sera catch√© par ErrorBoundary\n    throw new Error(error.message)\n  }\n  return (\n    <div>\n      <NetflixAppBar />\n      <NetflixHeader movie={headerMovie?.data} type={type} />\n      <NetflixRow\n        wideImage={true}\n        watermark={true}\n        type={TYPE_MOVIE}\n        filter=\"trending\"\n        title=\"Films Netflix\"\n      />\n      <NetflixRow\n        wideImage={false}\n        watermark={true}\n        type={TYPE_TV}\n        filter=\"trending\"\n        title=\"S√©rie Netflix\"\n      />\n\n      <NetflixRow\n        type={TYPE_MOVIE}\n        filter=\"toprated\"\n        title=\"Les mieux not√©s\"\n        watermark={true}\n        wideImage={true}\n      />\n\n      <NetflixRow\n        type={TYPE_TV}\n        filter=\"genre\"\n        param=\"10759\"\n        title=\"Action & aventure\"\n        watermark={true}\n        wideImage={true}\n      />\n\n      <NetflixRow\n        type={TYPE_MOVIE}\n        filter=\"genre\"\n        param=\"53\"\n        title=\"Les meilleurs Thriller\"\n        watermark={false}\n        wideImage={false}\n      />\n\n      {status === 'error' ? (\n        <div className={classes.alert}>\n          <Alert severity=\"error\">\n            <AlertTitle>Une erreur est survenue</AlertTitle>\n            Detail : {error.message}\n          </Alert>\n        </div>\n      ) : null}\n\n      {status === 'fetching' ? (\n        <div className={classes.progress}>\n          <CircularProgress />{' '}\n        </div>\n      ) : null}\n      <NetFlixFooter color=\"secondary\" si />\n    </div>\n  )\n}\nexport {NetflixById}\n"]},"metadata":{},"sourceType":"module"}