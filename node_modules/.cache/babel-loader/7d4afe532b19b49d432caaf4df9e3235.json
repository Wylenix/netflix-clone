{"ast":null,"code":"var _jsxFileName = \"/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/components/LoginRegister.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { makeStyles } from '@mui/styles';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport Alert from '@mui/material/Alert';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: '330px',\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  dialog: {\n    opacity: '0.9'\n  }\n}));\n\nconst FormLogin = ({\n  create = false,\n  login,\n  register,\n  logout\n}) => {\n  _s();\n\n  const [checked, setChecked] = React.useState(false);\n  const [username, setUsername] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const classes = useStyles();\n  const label = create ? 'Inscrivez vous' : 'Connexion';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"filled-basic\",\n      label: \"Email ou num\\xE9ro de t\\xE9l\\xE9phone\",\n      variant: \"filled\",\n      color: \"secondary\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      style: {\n        opacity: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"filled-basic\",\n      type: \"password\",\n      label: \"Mot de passe\",\n      variant: \"filled\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), create ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: '20px 0 5px 0'\n        },\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => register({\n          username,\n          password\n        }),\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"* Consultez nos CGV\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"This page is protected by Google reCAPTCHA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          margin: '20px 0 5px 0'\n        },\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => login({\n          username,\n          password\n        }),\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [' ', /*#__PURE__*/_jsxDEV(FormGroup, {\n          row: true,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              name: \"checkedA\",\n              checked: checked,\n              onChange: () => setChecked(!checked),\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this),\n            label: /*#__PURE__*/_jsxDEV(Typography, {\n              component: 'span',\n              style: {\n                fontSize: '0.8rem'\n              },\n              children: \"Se souvenir de moi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormLogin, \"XEk+y0+jnJgBXvPR6IcvL3OwpBM=\", false, function () {\n  return [useStyles];\n});\n\n_c = FormLogin;\n\nfunction PopupLogin({\n  open,\n  handleClose,\n  signup = false,\n  login,\n  register,\n  logout,\n  error,\n  status\n}) {\n  _s2();\n\n  const classes = useStyles();\n  const [create, setCreate] = React.useState(signup);\n\n  const handleSignUp = () => {\n    setCreate(true);\n  };\n\n  const handleSignIn = () => {\n    setCreate(false);\n  };\n\n  const label = create ? 'Inscrivez vous' : 'Connexion';\n  const spinner = status === 'fetching ' ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n    color: \"secondary\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 30\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      classes: {\n        paper: classes.dialog\n      },\n      style: {\n        backgroundColor: 'transparent'\n      },\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(FormLogin, {\n          create: create,\n          login: login,\n          register: register,\n          logout: logout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), error ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: [\"Erreur : \", error.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        style: {\n          justifyContent: 'flex-start'\n        },\n        children: !create ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSignUp,\n          color: \"secondary\",\n          children: [\"Nouveau sur Netflix ? \", spinner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSignIn,\n          color: \"secondary\",\n          autoFocus: true,\n          children: [\"Vous poss\\xE9der d\\xE9j\\xE0 un compte ? \", spinner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(PopupLogin, \"usgzpCpigEYayWObWdeD9W1f6As=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = PopupLogin;\nexport default PopupLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FormLogin\");\n$RefreshReg$(_c2, \"PopupLogin\");","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/components/LoginRegister.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","makeStyles","Checkbox","FormGroup","FormControlLabel","TextField","Typography","Alert","CircularProgress","useStyles","theme","root","display","flexDirection","minWidth","margin","spacing","dialog","opacity","FormLogin","create","login","register","logout","checked","setChecked","useState","username","setUsername","password","setPassword","classes","label","e","target","value","fontSize","PopupLogin","open","handleClose","signup","error","status","setCreate","handleSignUp","handleSignIn","spinner","paper","backgroundColor","message","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport {makeStyles} from '@mui/styles'\nimport Checkbox from '@mui/material/Checkbox'\nimport FormGroup from '@mui/material/FormGroup'\nimport FormControlLabel from '@mui/material/FormControlLabel'\nimport TextField from '@mui/material/TextField'\nimport Typography from '@mui/material/Typography'\nimport Alert from '@mui/material/Alert'\nimport CircularProgress from '@mui/material/CircularProgress'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minWidth: '330px',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  dialog: {\n    opacity: '0.9',\n  },\n}))\n\nconst FormLogin = ({create = false, login, register, logout}) => {\n  const [checked, setChecked] = React.useState(false)\n  const [username, setUsername] = React.useState('')\n  const [password, setPassword] = React.useState('')\n  const classes = useStyles()\n  const label = create ? 'Inscrivez vous' : 'Connexion'\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <TextField\n        id=\"filled-basic\"\n        label=\"Email ou numéro de téléphone\"\n        variant=\"filled\"\n        color=\"secondary\"\n        value={username}\n        onChange={e => setUsername(e.target.value)}\n        style={{opacity: '1'}}\n      />\n      <TextField\n        id=\"filled-basic\"\n        type=\"password\"\n        label=\"Mot de passe\"\n        variant=\"filled\"\n        value={password}\n        onChange={e => setPassword(e.target.value)}\n      />\n      {create ? (\n        <>\n          <Button\n            style={{margin: '20px 0 5px 0'}}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => register({username, password})}\n          >\n            {label}\n          </Button>\n          <small>* Consultez nos CGV</small>\n          <small>This page is protected by Google reCAPTCHA</small>\n        </>\n      ) : (\n        <>\n          <Button\n            style={{margin: '20px 0 5px 0'}}\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => login({username, password})}\n          >\n            {label}\n          </Button>\n          <div>\n            {' '}\n            <FormGroup row>\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    name=\"checkedA\"\n                    checked={checked}\n                    onChange={() => setChecked(!checked)}\n                    color=\"primary\"\n                  />\n                }\n                label={\n                  <Typography component={'span'} style={{fontSize: '0.8rem'}}>\n                    Se souvenir de moi\n                  </Typography>\n                }\n              />\n            </FormGroup>\n          </div>\n        </>\n      )}\n    </form>\n  )\n}\n\nfunction PopupLogin({\n  open,\n  handleClose,\n  signup = false,\n  login,\n  register,\n  logout,\n  error,\n  status,\n}) {\n  const classes = useStyles()\n  const [create, setCreate] = React.useState(signup)\n  const handleSignUp = () => {\n    setCreate(true)\n  }\n  const handleSignIn = () => {\n    setCreate(false)\n  }\n  const label = create ? 'Inscrivez vous' : 'Connexion'\n  const spinner =\n    status === 'fetching ' ? <CircularProgress color=\"secondary\" /> : <></>\n  return (\n    <>\n      <Dialog\n        classes={{\n          paper: classes.dialog,\n        }}\n        style={{backgroundColor: 'transparent'}}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{label}</DialogTitle>\n        <DialogContent>\n          <FormLogin\n            create={create}\n            login={login}\n            register={register}\n            logout={logout}\n          />\n          {error ? (\n            <Alert severity=\"error\">Erreur : {error.message}</Alert>\n          ) : null}\n        </DialogContent>\n        <DialogActions style={{justifyContent: 'flex-start'}}>\n          {!create ? (\n            <Button onClick={handleSignUp} color=\"secondary\">\n              Nouveau sur Netflix ? {spinner}\n            </Button>\n          ) : (\n            <Button onClick={handleSignIn} color=\"secondary\" autoFocus>\n              Vous posséder déjà un compte ? {spinner}\n            </Button>\n          )}\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\nexport default PopupLogin\n"]},"metadata":{},"sourceType":"module"}