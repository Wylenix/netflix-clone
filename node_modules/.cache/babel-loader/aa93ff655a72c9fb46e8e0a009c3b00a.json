{"ast":null,"code":"/* \n -- Ne pas modifier --\n Exemple d'utilitaire permettant de se connecter au backend Netflix\n*/\nimport axios from 'axios';\nimport { AUTH_URL, localStorageTokenKey } from '../config';\n\nasync function clientApiNetflix(endpoint, data) {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  return axios.post(`${AUTH_URL}/${endpoint}`, JSON.stringify(data), config).then(response => {\n    return response.data;\n  }).catch(error => {\n    if (error.response) {\n      return Promise.reject(error.response.data);\n    }\n  });\n}\n\nasync function getToken() {\n  return window.localStorage.getItem(localStorageTokenKey);\n}\n\nfunction storeToken({\n  user\n}) {\n  window.localStorage.setItem(localStorageTokenKey, user.token);\n  return user;\n}\n\nasync function login({\n  username,\n  password\n}) {\n  return clientApiNetflix('login', {\n    username,\n    password\n  }).then(storeToken);\n}\n\nasync function register({\n  username,\n  password\n}) {\n  return clientApiNetflix('register', {\n    username,\n    password\n  }).then(storeToken);\n}\n\nasync function logout() {\n  window.localStorage.removeItem(localStorageTokenKey);\n}\n\nexport { getToken, login, register, logout, localStorageTokenKey };","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/utils/authNetflixProvider.js"],"names":["axios","AUTH_URL","localStorageTokenKey","clientApiNetflix","endpoint","data","config","headers","post","JSON","stringify","then","response","catch","error","Promise","reject","getToken","window","localStorage","getItem","storeToken","user","setItem","token","login","username","password","register","logout","removeItem"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,oBAAlB,QAA6C,WAA7C;;AAGA,eAAeC,gBAAf,CAAgCC,QAAhC,EAA0CC,IAA1C,EAAgD;AAC9C,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB;AADI,GAAf;AAGA,SAAOP,KAAK,CACTQ,IADI,CACE,GAAEP,QAAS,IAAGG,QAAS,EADzB,EAC4BK,IAAI,CAACC,SAAL,CAAeL,IAAf,CAD5B,EACkDC,MADlD,EAEJK,IAFI,CAECC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACP,IAAhB;AACD,GAJI,EAKJQ,KALI,CAKEC,KAAK,IAAI;AACd,QAAIA,KAAK,CAACF,QAAV,EAAoB;AAClB,aAAOG,OAAO,CAACC,MAAR,CAAeF,KAAK,CAACF,QAAN,CAAeP,IAA9B,CAAP;AACD;AACF,GATI,CAAP;AAUD;;AAED,eAAeY,QAAf,GAA0B;AACxB,SAAOC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BlB,oBAA5B,CAAP;AACD;;AAED,SAASmB,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA4B;AAC1BJ,EAAAA,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4BrB,oBAA5B,EAAkDoB,IAAI,CAACE,KAAvD;AACA,SAAOF,IAAP;AACD;;AAED,eAAeG,KAAf,CAAqB;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAArB,EAA2C;AACzC,SAAOxB,gBAAgB,CAAC,OAAD,EAAU;AAACuB,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAV,CAAhB,CAAgDhB,IAAhD,CAAqDU,UAArD,CAAP;AACD;;AAED,eAAeO,QAAf,CAAwB;AAACF,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAxB,EAA8C;AAC5C,SAAOxB,gBAAgB,CAAC,UAAD,EAAa;AAACuB,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAb,CAAhB,CAAmDhB,IAAnD,CAAwDU,UAAxD,CAAP;AACD;;AAED,eAAeQ,MAAf,GAAwB;AACtBX,EAAAA,MAAM,CAACC,YAAP,CAAoBW,UAApB,CAA+B5B,oBAA/B;AACD;;AAED,SAAQe,QAAR,EAAkBQ,KAAlB,EAAyBG,QAAzB,EAAmCC,MAAnC,EAA2C3B,oBAA3C","sourcesContent":["/* \n -- Ne pas modifier --\n Exemple d'utilitaire permettant de se connecter au backend Netflix\n*/\nimport axios from 'axios'\nimport {AUTH_URL, localStorageTokenKey} from '../config'\n\n\nasync function clientApiNetflix(endpoint, data) {\n  const config = {\n    headers: {'Content-Type': 'application/json'},\n  }\n  return axios\n    .post(`${AUTH_URL}/${endpoint}`, JSON.stringify(data), config)\n    .then(response => {\n      return response.data\n    })\n    .catch(error => {\n      if (error.response) {\n        return Promise.reject(error.response.data)\n      }\n    })\n}\n\nasync function getToken() {\n  return window.localStorage.getItem(localStorageTokenKey)\n}\n\nfunction storeToken({user}) {\n  window.localStorage.setItem(localStorageTokenKey, user.token)\n  return user\n}\n\nasync function login({username, password}) {\n  return clientApiNetflix('login', {username, password}).then(storeToken)\n}\n\nasync function register({username, password}) {\n  return clientApiNetflix('register', {username, password}).then(storeToken)\n}\n\nasync function logout() {\n  window.localStorage.removeItem(localStorageTokenKey)\n}\n\nexport {getToken, login, register, logout, localStorageTokenKey}\n"]},"metadata":{},"sourceType":"module"}