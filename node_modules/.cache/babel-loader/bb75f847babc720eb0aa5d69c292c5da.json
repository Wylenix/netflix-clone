{"ast":null,"code":"import axios from 'axios';\nimport { apiKey, lang, API_URL, AUTH_URL } from '../config'; // utilise 'sleep' pour simuler des api longue\n//const sleep = t => new  Promise((resolve) =>setTimeout(resolve, t))\n\nconst clientApi = async endpoint => {\n  const page = 1;\n  const startChar = endpoint.includes('?') ? `&` : `?`;\n  const keyLang = `${startChar}api_key=${apiKey}&language=${lang}&page=${page}`;\n  return axios.get(`${API_URL}/${endpoint}${keyLang}`);\n};\n\nconst clientAuth = (endpoint, {\n  token,\n  data\n}) => {\n  const config = {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : undefined,\n      'Content-Type': data ? 'application/json' : undefined\n    }\n  };\n  return data ? axios.post(`${AUTH_URL}/${endpoint}`, JSON.stringify(data), config) : axios.get(`${AUTH_URL}/${endpoint}`, config);\n};\n\nexport { clientApi, clientAuth };","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/utils/clientApi.js"],"names":["axios","apiKey","lang","API_URL","AUTH_URL","clientApi","endpoint","page","startChar","includes","keyLang","get","clientAuth","token","data","config","headers","Authorization","undefined","post","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,OAAtB,EAA+BC,QAA/B,QAA8C,WAA9C,C,CAEA;AACA;;AAEA,MAAMC,SAAS,GAAG,MAAMC,QAAN,IAAkB;AAClC,QAAMC,IAAI,GAAG,CAAb;AACA,QAAMC,SAAS,GAAGF,QAAQ,CAACG,QAAT,CAAkB,GAAlB,IAA0B,GAA1B,GAAgC,GAAlD;AACA,QAAMC,OAAO,GAAI,GAAEF,SAAU,WAAUP,MAAO,aAAYC,IAAK,SAAQK,IAAK,EAA5E;AACA,SAAOP,KAAK,CAACW,GAAN,CAAW,GAAER,OAAQ,IAAGG,QAAS,GAAEI,OAAQ,EAA3C,CAAP;AACD,CALD;;AAOA,MAAME,UAAU,GAAG,CAACN,QAAD,EAAW;AAACO,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAX,KAA6B;AAC9C,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEJ,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuBK,SADpC;AAEP,sBAAgBJ,IAAI,GAAG,kBAAH,GAAwBI;AAFrC;AADI,GAAf;AAMA,SAAOJ,IAAI,GACPd,KAAK,CAACmB,IAAN,CAAY,GAAEf,QAAS,IAAGE,QAAS,EAAnC,EAAsCc,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAtC,EAA4DC,MAA5D,CADO,GAEPf,KAAK,CAACW,GAAN,CAAW,GAAEP,QAAS,IAAGE,QAAS,EAAlC,EAAqCS,MAArC,CAFJ;AAGD,CAVD;;AAYA,SAAQV,SAAR,EAAmBO,UAAnB","sourcesContent":["import axios from 'axios'\nimport {apiKey, lang, API_URL, AUTH_URL} from '../config'\n\n// utilise 'sleep' pour simuler des api longue\n//const sleep = t => new  Promise((resolve) =>setTimeout(resolve, t))\n\nconst clientApi = async endpoint => {\n  const page = 1\n  const startChar = endpoint.includes('?') ? `&` : `?`\n  const keyLang = `${startChar}api_key=${apiKey}&language=${lang}&page=${page}`\n  return axios.get(`${API_URL}/${endpoint}${keyLang}`)\n}\n\nconst clientAuth = (endpoint, {token, data}) => {\n  const config = {\n    headers: {\n      Authorization: token ? `Bearer ${token}` : undefined,\n      'Content-Type': data ? 'application/json' : undefined,\n    },\n  }\n  return data\n    ? axios.post(`${AUTH_URL}/${endpoint}`, JSON.stringify(data), config)\n    : axios.get(`${AUTH_URL}/${endpoint}`, config)\n}\n\nexport {clientApi, clientAuth}\n"]},"metadata":{},"sourceType":"module"}