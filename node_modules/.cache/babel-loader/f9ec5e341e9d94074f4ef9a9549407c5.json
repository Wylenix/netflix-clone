{"ast":null,"code":"var _jsxFileName = \"/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/components/NetflixApp.exercise.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NetflixAppBar } from './NetflixAppBar';\nimport { NetflixRow } from './NetflixRow';\nimport { NetFlixFooter } from './NetFlixFooter';\nimport { NetflixHeader } from './NetflixHeader';\nimport { getRandomType, getRandomId } from '../utils/helper';\nimport { clientApi } from '../utils/clientApi'; // 🐶 importe les composants MUI\n// import {Alert, AlertTitle} from '@mui/material'\n// import CircularProgress from '@mui/material/CircularProgress';\n// 🐶 importe le Hook 'makeStyles' pour te creer un Hook 'useStyles'\n// import {makeStyles} from '@mui/styles'\n\nimport './Netflix.css'; // 🐶 créé un hook 'useStyles' avec 'makeStyles'\n// 📑 https://material-ui.com/styles/basics/#hook-api\n// Ce hook aura deux classes :\n// 1. alert\n//  width: '50%',\n//  margin : 'auto',\n//  marginBotton:'50px'\n//\n// 2. progress\n//  marginLeft : '30px',\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NetflixApp = () => {\n  _s();\n\n  // 🐶 utilise le hook classes ='useStyles', il sera utilié plus bas\n  const [headerMovie, setHeaderMovie] = React.useState();\n  const [type] = React.useState(getRandomType());\n  const defaultMovieId = getRandomId(type); // 🐶 créé un state 'status', avec la valeur par defaut 'idle'\n\n  React.useEffect(() => {\n    // 🐶 changer le status en 'fetching'\n    clientApi(`${type}/${defaultMovieId}`).then(response => {\n      setHeaderMovie(response); // 🐶 changer le status en 'done'\n    }) // 🐶 changer le status en 'error' dans le catch\n    .catch(error => console.error(error)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NetflixAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixHeader, {\n      movie: headerMovie === null || headerMovie === void 0 ? void 0 : headerMovie.data,\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      wideImage: false,\n      title: \"Films Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetflixRow, {\n      wideImage: true,\n      title: \"S\\xE9rie Netflix\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NetFlixFooter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NetflixApp, \"LpbFowEluIrsnJe7rulqNnaYZ1Q=\");\n\n_c = NetflixApp;\nexport { NetflixApp };\n\nvar _c;\n\n$RefreshReg$(_c, \"NetflixApp\");","map":{"version":3,"sources":["/Users/lio/Documents/Programmation/React-MikeC/react-netflix-clone/src/components/NetflixApp.exercise.js"],"names":["React","NetflixAppBar","NetflixRow","NetFlixFooter","NetflixHeader","getRandomType","getRandomId","clientApi","NetflixApp","headerMovie","setHeaderMovie","useState","type","defaultMovieId","useEffect","then","response","catch","error","console","data"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AACA,SAAQC,aAAR,EAAuBC,WAAvB,QAAyC,iBAAzC;AACA,SAAQC,SAAR,QAAwB,oBAAxB,C,CACA;AACA;AACA;AACA;AACA;;AACA,OAAO,eAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACW,QAAN,EAAtC;AACA,QAAM,CAACC,IAAD,IAASZ,KAAK,CAACW,QAAN,CAAeN,aAAa,EAA5B,CAAf;AACA,QAAMQ,cAAc,GAAGP,WAAW,CAACM,IAAD,CAAlC,CAJuB,CAMvB;;AACAZ,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACpB;AACAP,IAAAA,SAAS,CAAE,GAAEK,IAAK,IAAGC,cAAe,EAA3B,CAAT,CACGE,IADH,CACQC,QAAQ,IAAI;AAChBN,MAAAA,cAAc,CAACM,QAAD,CAAd,CADgB,CAEhB;AACD,KAJH,EAKE;AALF,KAMGC,KANH,CAMSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CANlB,EAFoB,CASpB;AACD,GAVD,EAUG,EAVH;AAWA,sBACE;AAAA,4BACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAET,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEW,IAAnC;AAAyC,MAAA,IAAI,EAAER;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAE,KAAvB;AAA8B,MAAA,KAAK,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAE,IAAvB;AAA6B,MAAA,KAAK,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJF,eAgBE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAtCD;;GAAMJ,U;;KAAAA,U;AAuCN,SAAQA,UAAR","sourcesContent":["import React from 'react'\nimport {NetflixAppBar} from './NetflixAppBar'\nimport {NetflixRow} from './NetflixRow'\nimport {NetFlixFooter} from './NetFlixFooter'\nimport {NetflixHeader} from './NetflixHeader'\nimport {getRandomType, getRandomId} from '../utils/helper'\nimport {clientApi} from '../utils/clientApi'\n// 🐶 importe les composants MUI\n// import {Alert, AlertTitle} from '@mui/material'\n// import CircularProgress from '@mui/material/CircularProgress';\n// 🐶 importe le Hook 'makeStyles' pour te creer un Hook 'useStyles'\n// import {makeStyles} from '@mui/styles'\nimport './Netflix.css'\n\n// 🐶 créé un hook 'useStyles' avec 'makeStyles'\n// 📑 https://material-ui.com/styles/basics/#hook-api\n// Ce hook aura deux classes :\n// 1. alert\n//  width: '50%',\n//  margin : 'auto',\n//  marginBotton:'50px'\n//\n// 2. progress\n//  marginLeft : '30px',\n\nconst NetflixApp = () => {\n  // 🐶 utilise le hook classes ='useStyles', il sera utilié plus bas\n  const [headerMovie, setHeaderMovie] = React.useState()\n  const [type] = React.useState(getRandomType())\n  const defaultMovieId = getRandomId(type)\n\n  // 🐶 créé un state 'status', avec la valeur par defaut 'idle'\n  React.useEffect(() => {\n    // 🐶 changer le status en 'fetching'\n    clientApi(`${type}/${defaultMovieId}`)\n      .then(response => {\n        setHeaderMovie(response)\n        // 🐶 changer le status en 'done'\n      })\n      // 🐶 changer le status en 'error' dans le catch\n      .catch(error => console.error(error))\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n  return (\n    <div>\n      <NetflixAppBar />\n      <NetflixHeader movie={headerMovie?.data} type={type} />\n      <NetflixRow wideImage={false} title=\"Films Netflix\" />\n      <NetflixRow wideImage={true} title=\"Série Netflix\" />\n      {/* 🐶 créé une <div> avec le prop 'className' et passer le style 'alert'  \n        - Ajouter ensuite <Alert severity=\"error\"> avec un message d'erreur\n        - conditionnner l'affichage de cette <div> au status === 'error'\n      */}\n\n      {/* 🐶 créé une <div> avec le prop 'className' et passer le style 'progress'  \n        - Ajouter ensuite <CircularProgress />\n        - conditionnner l'affichage de cette <div> au status === 'fetching'\n        - note : modifier la fonction 'clientAPI' avec sleep(2000) pour simuler un long appel\n      */}\n\n      <NetFlixFooter />\n    </div>\n  )\n}\nexport {NetflixApp}\n"]},"metadata":{},"sourceType":"module"}